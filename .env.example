# Backend Configuration for AI Game Master
# This is the Flask backend configuration
# Frontend configuration is in frontend/.env.example

# AI Provider Configuration
# Options: 'llamacpp_http' or 'openrouter'
AI_PROVIDER=llamacpp_http

# Response parsing mode: 'strict' (uses instructor) or 'flexible' (extracts JSON from text)
# flexible has more chances to be supported correctly by the models
AI_RESPONSE_PARSING_MODE=flexible

# Temperature setting for AI responses (0.0-2.0)
# Lower values (0.0-0.5) make responses more focused and deterministic
# Higher values (0.5-2.0) make responses more creative and varied
AI_TEMPERATURE=0.7

# OpenRouter Configuration (only needed if AI_PROVIDER=openrouter)
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_MODEL_NAME=google/gemini-2.5-flash-preview
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# Llama.cpp HTTP Server Configuration (only needed if AI_PROVIDER=llamacpp_http)
LLAMA_SERVER_URL=http://127.0.0.1:8080

# Game Configuration (unused for now)
MAX_HISTORY_TURNS=10

# RAG (Retrieval-Augmented Generation) Configuration
# Enable/disable the RAG system for knowledge retrieval
# Disabling can significantly speed up startup time and tests
RAG_ENABLED=true

# Text-to-Speech Configuration
# Options: 'kokoro' (requires additional setup), 'none', 'disabled', 'test'
TTS_PROVIDER=kokoro

# Kokoro language code (only used when TTS_PROVIDER=kokoro)
# Options: 'a' (American English), 'b' (British English), etc.
KOKORO_LANG_CODE=a

# TTS cache directory name within static folder
TTS_CACHE_DIR_NAME=tts_cache

# Repository Configuration
# Controls which repository implementation to use for game state persistence
# Options: 'memory' (in-memory, lost on restart), 'file' (JSON files), 'database' (future)
GAME_STATE_REPO_TYPE=memory

# File path for game state persistence (only used when GAME_STATE_REPO_TYPE=file)
GAME_STATE_FILE_PATH=saves/game_state.json

# Directory paths for game data
CAMPAIGNS_DIR=saves/campaigns
CHARACTER_TEMPLATES_DIR=saves/character_templates

# Flask Configuration
SECRET_KEY=your-secret-key-here
FLASK_APP=run.py
FLASK_DEBUG=False

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=dnd_ai_poc.log
