/**
 * Type definitions for content creation forms
 * These types represent the structure of data generated by the content creation forms
 */

// Base types for common structures
interface NamedResource {
  index: string
  name: string
  url: string
}

export interface AbilityBonus {
  ability_score: string
  bonus: number
}

interface DamageInfo {
  damage_dice: string
  damage_type: NamedResource
}

interface ArmorClass {
  type: string
  value: number
}

// Spell content type
export interface SpellContent {
  index: string
  name: string
  desc: string[]
  higher_level: string[]
  range: string
  components: string[]
  material?: string
  ritual: boolean
  duration: string
  concentration: boolean
  casting_time: string
  level: number
  school: NamedResource
  classes: NamedResource[]
  url: string
}

// Monster content type
export interface MonsterContent {
  index: string
  name: string
  size: string
  type: string
  alignment: string
  armor_class: ArmorClass[]
  hit_points: number
  hit_dice: string
  hit_points_roll: string
  speed: Record<string, string>
  strength: number
  dexterity: number
  constitution: number
  intelligence: number
  wisdom: number
  charisma: number
  proficiencies: NamedResource[]
  damage_vulnerabilities: string[]
  damage_resistances: string[]
  damage_immunities: string[]
  condition_immunities: NamedResource[]
  senses: Record<string, string | number>
  languages: string
  challenge_rating: number
  proficiency_bonus: number
  xp: number
  actions: MonsterAction[]
  url: string
}

export interface MonsterAction {
  name: string
  desc: string
  attack_bonus?: number
  damage?: DamageInfo[]
}

// Equipment content type
export interface EquipmentContent {
  index: string
  name: string
  equipment_category: NamedResource
  cost: {
    quantity: number
    unit: string
  }
  weight?: number
  desc?: string[]
  url: string
  // Weapon-specific fields
  weapon_category?: string
  weapon_range?: string
  category_range?: string
  damage?: DamageInfo
  range?: {
    normal: number
    long?: number
  }
}

// Race content type
export interface RaceContent {
  index: string
  name: string
  speed: number
  ability_bonuses: AbilityBonus[]
  alignment: string
  age: string
  size: string
  size_description: string
  starting_proficiencies: NamedResource[]
  languages: string[]
  language_desc: string
  traits: NamedResource[]
  subraces: NamedResource[]
  url: string
}

// Background content type
export interface BackgroundContent {
  index: string
  name: string
  starting_proficiencies: string[]
  language_options?: {
    choose: number
    type: string
    from: { options: NamedResource[] }
  }
  starting_equipment: NamedResource[]
  starting_equipment_options: NamedResource[]
  feature: {
    name: string
    desc: string[]
  }
  personality_traits: {
    choose: number
    type: string
    from: { options: NamedResource[] }
  }
  ideals: {
    choose: number
    type: string
    from: { options: NamedResource[] }
  }
  bonds: {
    choose: number
    type: string
    from: { options: NamedResource[] }
  }
  flaws: {
    choose: number
    type: string
    from: { options: NamedResource[] }
  }
  url: string
}

// Feat content type
export interface FeatContent {
  index: string
  name: string
  prerequisites: string[]
  desc: string[]
  url: string
}

// Trait content type
export interface TraitContent {
  index: string
  name: string
  races: string[]
  subraces: string[]
  desc: string[]
  proficiencies: NamedResource[]
  url: string
}

// Skill content type
export interface SkillContent {
  index: string
  name: string
  desc: string[]
  ability_score: string
  url: string
}

// Condition content type
export interface ConditionContent {
  index: string
  name: string
  desc: string[]
  url: string
}

// Alignment content type
export interface AlignmentContent {
  index: string
  name: string
  abbreviation: string
  desc: string
  url: string
}

// Damage type content
export interface DamageTypeContent {
  index: string
  name: string
  desc: string[]
  url: string
}

// Weapon property content
export interface WeaponPropertyContent {
  index: string
  name: string
  desc: string[]
  url: string
}

// Ability score content
export interface AbilityScoreContent {
  index: string
  name: string
  full_name: string
  desc: string[]
  skills: NamedResource[]
  url: string
}

// Language content
export interface LanguageContent {
  index: string
  name: string
  type: string
  script?: string
  typical_speakers: string[]
  url: string
}

// Proficiency content
export interface ProficiencyContent {
  index: string
  name: string
  type: string
  classes: NamedResource[]
  races: NamedResource[]
  url: string
}

// Rule content
export interface RuleContent {
  index: string
  name: string
  desc: string
  subsections: NamedResource[]
  url: string
}

// Equipment category content
export interface EquipmentCategoryContent {
  index: string
  name: string
  equipment: NamedResource[]
  url: string
}

// Magic school content
export interface MagicSchoolContent {
  index: string
  name: string
  desc: string
  url: string
}

// Rule section content
export interface RuleSectionContent {
  index: string
  name: string
  desc: string
  url: string
}

// Feature content
export interface FeatureContent {
  index: string
  name: string
  level: number
  class: NamedResource
  subclass?: NamedResource
  desc: string[]
  url: string
}

// Level content
export interface LevelContent {
  level: number
  ability_score_bonuses: number
  prof_bonus: number
  features: NamedResource[]
  class_specific?: Record<string, unknown>
  index: string
  class: NamedResource
  url: string
}

// Magic item content
export interface MagicItemContent {
  index: string
  name: string
  rarity: string
  equipment_category?: NamedResource
  desc: string[]
  attunement_required?: boolean
  url: string
}

// Subclass content
export interface SubclassContent {
  index: string
  name: string
  class: NamedResource
  subclass_flavor: string
  desc: string[]
  subclass_levels: string
  url: string
}

// Subrace content
export interface SubraceContent {
  index: string
  name: string
  race: NamedResource
  desc: string
  ability_bonuses: AbilityBonus[]
  starting_proficiencies: NamedResource[]
  racial_traits: NamedResource[]
  url: string
}

// Class content
export interface ClassContent {
  index: string
  name: string
  hit_die: number
  proficiency_choices: {
    desc: string
    choose: number
    type: string
    from: {
      option_set_type: string
      options: NamedResource[]
    }
  }[]
  proficiencies: NamedResource[]
  saving_throws: NamedResource[]
  starting_equipment: {
    equipment: NamedResource
    quantity: number
  }[]
  starting_equipment_options: {
    desc: string
    choose: number
    type: string
    from: {
      option_set_type: string
      options: NamedResource[]
    }
  }[]
  class_levels: string
  multi_classing?: {
    prerequisites?: NamedResource[]
    proficiencies?: NamedResource[]
  }
  spellcasting?: {
    level: number
    spellcasting_ability: NamedResource
    info: {
      name: string
      desc: string[]
    }[]
  }
  url: string
}

// Union type for all content types
export type ContentData =
  | SpellContent
  | MonsterContent
  | EquipmentContent
  | RaceContent
  | BackgroundContent
  | FeatContent
  | TraitContent
  | SkillContent
  | ConditionContent
  | AlignmentContent
  | DamageTypeContent
  | WeaponPropertyContent
  | AbilityScoreContent
  | LanguageContent
  | ProficiencyContent
  | RuleContent
  | EquipmentCategoryContent
  | MagicSchoolContent
  | RuleSectionContent
  | FeatureContent
  | LevelContent
  | MagicItemContent
  | SubclassContent
  | SubraceContent
  | ClassContent
